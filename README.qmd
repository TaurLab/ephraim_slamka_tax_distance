---
title: "Slamka taxdist project"
format: html  #change to gfm
editor: visual
execute: 
  echo: false
  warning: false
---

## Prepare data

```{r}
source("R/makeall.R")
```

We examined `r nrow(s)` samples, collected from a healthy volunteer (`HV`), and 3 cancer patients undergoing cancer treatment (`PT1`, `PT2`, `PT3`). In each subject, multiple samples were collected.

```{r}
#| tbl-cap: Subjects and number of samples

tbl <- s %>% group_by(pt) %>% summarize(n.samples=n())
knitr::kable(tbl)
```

Each subject's samples were collected over several different days, but more than one sample was sometimes taken per day. It should be noted that some samples were also sequenced multiple times.

```{r}
#| out-width: 100%
#| fig-asp: 0.3


s.norm <- s %>% 
  count(pt.day.samp,pt,day,pt.day,sample.id,source,is.healthy,has.sameday,has.reseq) %>%
  group_by(pt) %>% 
  mutate(day.rank=dense_rank(day)) %>%
  ungroup() %>%
  group_by(pt.day) %>%
  mutate(pt.day.rank=row_number()) %>%
  ungroup() %>%
  mutate(row0=as.numeric(factor(pt)),
         row=row0-(pt.day.rank-1)/3)
ylab <- s.norm %>% select(row0,pt) %>% unique()

ggplot(s.norm,aes(x=row,y=day.rank)) +
  geom_point(size=4,aes(color=factor(n))) +
  geom_text(aes(label=n)) +
  scale_color_discrete("No. times\nsequenced")  +
  scale_x_continuous("Subject",label=ylab$pt,breaks=ylab$row0) +
  ylab("time sequence") + 
  coord_flip()

```

By selecting all possible pairwise combinations of the sequencing data, we generated various types of two-sample comparisons:

1.  Samples from 2 different subjects.

2.  Samples from the same subject, but at 2 different timepoints.

3.  2 samples taken from the same patient and same day.

4.  2 sequencing runs of the same sample.

```{r}
pair.tbl <- pairs %>% count(status) %>%
  rename(`Pairwise comparison type`=status)
pair.tbl

knitr::kable(pair.tbl)
```

A good distance metric should ideally be capable of demonstrating meaningful differences between individuals' microbiomes, including changes that occur because of antibiotic disruption. It should not be overly affected by minor differences, such as those found between samples in a stable individual. We reason that `#1` and `#2` comparisons would likely yield differences that vary greatly (i.e. wide range of distances, from 0 to 1). On the other hand, `#3` and `#4` comparisons would be expected to be quite similar (i.e. low distances nearing 0).

Conventional distance metrics are not ideal when it comes to discerning meaningful differences, as evidenced by the violin plots below.

```{r}
#| out-width: 100%
#| fig-width: 20
#| fig-height: 6.6


grid.arrange(g.v.euclidean,
g.v.manhattan,
g.v.bray,
g.v.horn,
g.v.unifrac,
g.v.wunifrac,nrow=2,ncol=3)

# g.v.taxhorn.mean <- view_violin(dist.taxhorn.mean,title="taxhorn.mean")
# g.v.taxhorn.weightedmean <- view_violin(dist.taxhorn.weightedmean,title="taxhorn.weightedmean")
# g.v.taxhorn.aabthing <- view_violin(dist.taxhorn.aabthing, title="taxhorn.aabthing")
# g.v.taxhorn.abthing<-view_violin(dist.taxhorn.abthing,title="taxhorn.abthing")
# g.v.taxhorn.acthing<-view_violin(dist.taxhorn.acthing,title="taxhorn.acthing")
# g.v.taxhorn.bthing<-view_violin(dist.taxhorn.bthing,title="taxhorn.bthing")
# g.v.taxhorn.bdthing<-view_violin(dist.taxhorn.bdthing,title="taxhorn.bdthing")
# g.v.taxhorn.bbthing<-view_violin(dist.taxhorn.bbthing,title="taxhorn.bbthing")
# g.v.taxhorn.wnsk2<-view_violin(dist.taxhorn.wnsk2,title="taxhorn.wnsk2")
# 
# g.v.taxhorn.wnsk1<-view_violin(dist.taxhorn.wnsk1,title="taxhorn.wnsk1")
# g.v.taxhorn.nsk<-view_violin(dist.taxhorn.nsk,title="taxhorn.nsk")
# g.v.taxhorn.bcthing<-view_violin(dist.taxhorn.bcthing,title="taxhorn.bcthing")
# 
# g.v.taxhorn.wnsk2
```

We attempted a variety of custom distance functions, where distance was derived by calculating separate distance values across all pairwise samples, after by collapsing by each taxonomic level. The functions shown below were various ways to combined the taxonomic level-specific distances. We find `taxhorn.wsk1` to be the most optimal combining function, which is the weight mean of distances after excluding Superkingdom level.

```{r}
#| out-width: 100%
#| #| fig-width: 10
#| fig-height: 10
grid.arrange(g.v.taxhorn.mean,
  g.v.taxhorn.weightedmean,
  g.v.taxhorn.aabthing,
  g.v.taxhorn.abthing,
  g.v.taxhorn.bthing,
  g.v.taxhorn.bcthing,
  g.v.taxhorn.nsk,
  g.v.taxhorn.wnsk1,
  g.v.taxhorn.wnsk2,
  nrow = 3
)

```

If we look at hierarchical clustering of samples based on calculated distances, we can see that the weighted average taxhorn puts out a more desirable ordering.

```{r}
#| out-width: 100%
grid.arrange(g.hc.euclidean)
```

For example, note how samples dominated by *Enterococcus* more naturally clusters together.

```{r}
#| out-width: 100%
grid.arrange(g.hc.taxhorn.weightedmean)
```
